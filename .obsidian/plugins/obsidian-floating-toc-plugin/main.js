/*
	This is the Obsidian example vault is amazing, there are a lot of dazzling features and showcase, I believe you will wonder a bit, is this Obsidian?
	[Blue-topaz-examples](https://github.com/cumany/Blue-topaz-examples)
	*/

var ce=Object.create;var w=Object.defineProperty;var de=Object.getOwnPropertyDescriptor;var pe=Object.getOwnPropertyNames;var ge=Object.getPrototypeOf,fe=Object.prototype.hasOwnProperty;var D=e=>w(e,"__esModule",{value:!0});var ue=(e,t)=>{D(e);for(var r in t)w(e,r,{get:t[r],enumerable:!0})},he=(e,t,r)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of pe(t))!fe.call(e,s)&&s!=="default"&&w(e,s,{get:()=>t[s],enumerable:!(r=de(t,s))||r.enumerable});return e},E=e=>he(D(w(e!=null?ce(ge(e)):{},"default",e&&e.__esModule&&"default"in e?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e);var b=(e,t,r)=>new Promise((s,n)=>{var l=a=>{try{o(r.next(a))}catch(d){n(d)}},i=a=>{try{o(r.throw(a))}catch(d){n(d)}},o=a=>a.done?s(a.value):Promise.resolve(a.value).then(l,i);o((r=r.apply(e,t)).next())});ue(exports,{default:()=>_,refresh_node:()=>re,selfDestruct:()=>k});var p=E(require("obsidian"));var h=E(require("obsidian"));function x(e,t,r,s=null){return b(this,null,function*(){let n=/(?<=^\s*)[0-9]+\.\s/,l=/(?<=^\s*)[\-\+]\s/,i,o="";(i=n.exec(e))!==null?(o=i[0],e=e.replace(n,"")):(i=l.exec(e))!==null&&(o=i[0],e=e.replace(l,""));let a=t;yield h.MarkdownRenderer.renderMarkdown(e,a,r,s);let d=a.createEl("a");d.addClass("text");let c=a.querySelector("p");if(c){let f=/<a[^>]*>|<\/[^>]*a>/gm;o?d.innerHTML=o+c.innerHTML.replace(f,""):d.innerHTML=c.innerHTML.replace(f,""),a.removeChild(c)}})}function L(e,t,r,s){return b(this,null,function*(){let n=t.createEl("li");n.addClass("heading-list-item"),n.setAttribute("data-level",r.level.toString()),n.setAttribute("data-id",s.toString()),n.setAttribute("data-line",r.position.start.line.toString());let l=n.createEl("div");l.addClass("text-wrap"),l.onclick=function(o){var d;let a=(d=parseInt(n.getAttribute("data-line")))!=null?d:0;if(o.ctrlKey)be(e,a);else{me(e,a);let c=t.querySelector(".text-wrap.located");c&&c.removeClass("located"),l.addClass("located")}},x(r.heading,l,e.file.path,null);let i=n.createEl("div");i.addClass("line-wrap"),i.createDiv().addClass("line")})}var me=(e,t)=>{e.leaf.openFile(e.file,{eState:{line:t}})},be=(e,t)=>{var l,i;let r=(i=(l=e==null?void 0:e.currentMode.getFoldInfo())==null?void 0:l.folds)!=null?i:[],s=t,n=0;if(r.some((o,a)=>(n=a,o.from==s)))r.splice(n,1);else{let o={from:t,to:t+1};r.push(o)}e==null||e.currentMode.applyFoldInfo({folds:r,lines:e.editor.lineCount()}),e==null||e.onMarkdownFold()};function A(e,t){var n;let r=(l,i)=>{t.settings.positionStyle=="right"?(i.addClass("floating-right"),i.removeClass("floating-left")):t.settings.positionStyle=="left"&&(i.addClass("floating-left"),i.removeClass("floating-rigth"));let o=i.createEl("ul");o.addClass("floating-toc");let a=new h.ButtonComponent(o);a.setIcon("pin").setTooltip("pin").setClass("pin").setClass("hide").onClick(()=>{i.classList.contains("pin")?i.removeClass("pin"):i.addClass("pin")}),o.onmouseenter=function(){a.buttonEl.removeClass("hide")},o.onmouseleave=function(){a.buttonEl.addClass("hide")};let d=e.workspace.getActiveFile();globalThis.headingdata=e.metadataCache.getFileCache(d).headings,globalThis.headingdata&&(globalThis.headingdata.forEach((c,f)=>{let y=e.workspace.getActiveViewOfType(h.MarkdownView);L(y,o,c,f)}),l==null||l.querySelector(".markdown-source-view").insertAdjacentElement("beforebegin",i))};if(this.app.workspace.getActiveViewOfType(h.MarkdownView)){(0,h.requireApiVersion)("0.15.0")?activeDocument=activeWindow.document:activeDocument=window.document;let l=t.app.workspace.getActiveViewOfType(h.MarkdownView);if((n=l.contentEl)==null?void 0:n.querySelector(".floating-toc-div"))return;{let o=createEl("div");o.addClass("floating-toc-div"),r(l.contentEl,o)}}}var C=E(require("obsidian"));var I=["left","right"],V={ignoreTopHeader:!1,positionStyle:"left"};var le=E(require("obsidian"));var q={};var P={};var z={};var B={};var M={"Floating TOC position":"Floating TOC position","Floating TOC position, default on the left side of the notes":"Floating TOC position, default on the left side of the notes","Ignore top-level headers":"Ignore top-level headers","Select whether to ignore the top-level headings. When turned on, the top-level headings in the current note are not displayed in the floating TOC.":"Select whether to ignore the top-level headings. When turned on, the top-level headings in the current note are not displayed in the floating TOC.","Plugin Settings":"Plugin Settings","Plugin Style Settings":"Plugin Style Settings"};var N={};var R={};var j={};var U={};var G={};var W={};var J={};var Y={};var $={};var K={};var Q={};var X={};var Z={};var ee={};var te={};var ne={};var oe={"Floating TOC position":"\u6D6E\u52A8\u76EE\u5F55\u663E\u793A\u4F4D\u7F6E","Floating TOC position, default on the left side of the notes":"\u6D6E\u52A8\u76EE\u5F55\u663E\u793A\u4F4D\u7F6E\uFF0C\u9ED8\u8BA4\u663E\u793A\u5728\u7B14\u8BB0\u5DE6\u4FA7","Ignore top-level headers":"\u662F\u5426\u5FFD\u7565\u9876\u7EA7\u76EE\u5F55","Select whether to ignore the top-level headings. When turned on, the top-level headings in the current note are not displayed in the floating TOC.":"\u9009\u62E9\u662F\u5426\u5FFD\u7565\u9876\u7EA7\u6807\u9898\uFF0C\u5F00\u542F\u540E\u5F53\u524D\u6587\u6863\u4E2D\u6700\u9876\u7EA7\u7684\u6807\u9898\u4E0D\u663E\u793A\u5728\u6D6E\u52A8\u76EE\u5F55\u4E2D\u3002","Plugin Settings":"\u63D2\u4EF6\u8BBE\u7F6E","Plugin Style Settings":"\u63D2\u4EF6\u6837\u5F0F\u8BBE\u7F6E"};var ie={};var ye={ar:q,cs:P,da:z,de:B,en:M,"en-gb":N,es:R,fr:j,hi:U,id:G,it:W,ja:J,ko:Y,nl:$,nn:K,pl:Q,pt:X,"pt-br":Z,ro:ee,ru:te,tr:ne,"zh-cn":oe,"zh-tw":ie},ae=ye[le.moment.locale()];function v(e){return ae&&ae[e]||M[e]}var O=class extends C.PluginSettingTab{constructor(t,r){super(t,r);this.plugin=r,addEventListener("refresh-toc",()=>{k(),A(t,this.plugin)})}display(){let{containerEl:t}=this;t.empty(),t.createEl("h1",{text:"Obsidian Floating TOC "}),t.createEl("span",{text:""}).createEl("a",{text:"Author: Cuman \u2728",href:"https://github.com/cumany"}),t.createEl("span",{text:""}).createEl("a",{text:"Readme:\u4E2D\u6587",href:"https://github.com/cumany/obsidian-floating-toc-plugin/blob/master/README-zh_cn.md"}),t.createEl("span",{text:""}).createEl("a",{text:"|English  ",href:"https://github.com/cumany/obsidian-floating-toc-plugin/blob/master/README.md"}),t.createEl("p",{text:"\u{1F511}TIPS: "}).createEl("p",{text:"ctrl + click on the floating toc to collapse/expand the header."}),t.createEl("h2",{text:v("Plugin Settings")}),new C.Setting(t).setName(v("Floating TOC position")).setDesc(v("Floating TOC position, default on the left side of the notes")).addDropdown(i=>{let o={};I.map(a=>o[a]=a),i.addOptions(o),i.setValue(this.plugin.settings.positionStyle).onChange(a=>{this.plugin.settings.positionStyle=a,this.plugin.saveSettings(),setTimeout(()=>{dispatchEvent(new Event("refresh-toc"))},100)})}),t.createEl("h2",{text:v("Plugin Style Settings")}),app.plugins.enabledPlugins.has("obsidian-style-settings")?new C.ButtonComponent(t).setIcon("palette").setClass("tiny").setButtonText("\u{1F3A8} Open style settings").onClick(()=>{app.setting.open(),app.setting.openTabById("obsidian-style-settings")}):t.createEl("span",{text:""}).createEl("a",{text:"Please install or enable the style-settings plugin",href:"obsidian://show-plugin?id=obsidian-style-settings"});let s=t.createEl("div",{cls:"cDonationSection"}),n=createEl("p"),l=createEl("p");l.appendText("If you like this Plugin and are considering donating to support continued development, use the button below!"),n.setAttribute("style","color: var(--text-muted)"),s.appendChild(l),s.appendChild(n),s.appendChild(Se("https://github.com/cumany#thank-you-very-much-for-your-support"))}},Se=e=>{let t=createEl("a");return t.setAttribute("href",e),t.addClass("buymeacoffee-img"),t.innerHTML='<img src="https://img.buymeacoffee.com/button-api/?text=Buy me a coffee &emoji=&slug=Cuman&button_colour=BD5FFF&font_colour=ffffff&font_family=Poppins&outline_colour=000000&coffee_colour=FFDD00" />',t};var u;function k(){(0,p.requireApiVersion)("0.15.0")?u=activeWindow.document:u=window.document,u.querySelectorAll(".floating-toc-div").forEach(t=>{t&&t.remove()})}function re(e){var r;(0,p.requireApiVersion)("0.15.0")?u=activeWindow.document:u=window.document;let t=(r=e.contentEl)==null?void 0:r.querySelector(".floating-toc-div");if(t){let s=t.querySelector("ul.floating-toc");s||(s=t.createEl("ul"),s.addClass("floating-toc"));let n=t==null?void 0:t.querySelectorAll("li.heading-list-item"),l=globalThis.headingdata;if(l)return n.length>=l.length?n==null||n.forEach((i,o)=>{var a;if(l[o]){if(l[o].level==i.getAttribute("data-level")&&l[o].heading==i.children[0].innerText&&l[o].position.start.line==i.getAttribute("data-line"))return;i.setAttribute("data-level",l[o].level.toString()),i.setAttribute("data-id",o.toString()),i.setAttribute("data-line",l[o].position.start.line.toString()),(a=i.children[0].querySelector("a"))==null||a.remove(),x(l[o].heading,i.children[0],e.file.path,null)}else i.remove()}):l==null||l.forEach((i,o)=>{var a;if(o<=n.length-1){if(i.level.toString()==n[o].getAttribute("data-level")&&i.heading==n[o].children[0].innerText&&i.position.start.line.toString()==n[o].getAttribute("data-line"))return;n[o].setAttribute("data-level",i.level.toString()),n[o].setAttribute("data-id",o.toString()),n[o].setAttribute("data-line",i.position.start.line.toString()),(a=n[o].children[0].querySelector("a"))==null||a.remove(),x(i.heading,n[o].children[0],e.file.path,null)}else L(e,s,i,o)}),!0;s.remove()}else return!1}function Ce(e){var r,s,n,l,i,o;let t=e.target;if(((r=t.parentElement)==null?void 0:r.classList.contains("cm-editor"))||((s=t.parentElement)==null?void 0:s.classList.contains("markdown-reading-view"))){let a=app.workspace.getActiveViewOfType(p.MarkdownView),d,c={};if(a){d=(n=a.currentMode.getScroll())!=null?n:0;let f=globalThis.headingdata,y=(l=f==null?void 0:f.length)!=null?l:0,S=0,g=a.contentEl.querySelector(".floating-toc");if(g){let F=parseInt((i=g.querySelector("li.heading-list-item"))==null?void 0:i.getAttribute("data-line")),se=parseInt((o=g.lastElementChild)==null?void 0:o.getAttribute("data-line"));if(d<=0){let T=g.querySelector(".heading-list-item.located");T&&T.removeClass("located");let m=g==null?void 0:g.querySelector(`li[data-line='${F}']`);m&&m.addClass("located"),g.querySelector(".heading-list-item").scrollIntoView()}else{for(;--y>=0;)if(f[y].position.start.line<=d){c=f[y],S=f[y].position.start.line;break}if(!c)return;let T=g.querySelector(".heading-list-item.located");T&&T.removeClass("located"),!S&&g&&(S=F);let m=g==null?void 0:g.querySelector(`li[data-line='${S}']`);m&&(S==se||S==F?m.addClass("located"):m.nextElementSibling&&m.nextElementSibling.addClass("located"),m.scrollIntoView({block:"center"}))}}}}}var H=(0,p.debounce)(Ce,200),_=class extends p.Plugin{onload(){return b(this,null,function*(){(0,p.requireApiVersion)("0.15.0")?u=activeWindow.document:u=window.document,yield this.loadSettings();let t=n=>{n&&(re(n)||A(app,this))};this.addCommand({id:"pin-toc-panel",name:"Pinning the Floating TOC panel",icon:"pin",callback:()=>b(this,null,function*(){let n=this.app.workspace.getActiveViewOfType(p.MarkdownView);if(n){let l=n.contentEl.querySelector(".floating-toc-div");l&&(l.classList.contains("pin")?l.removeClass("pin"):l.addClass("pin"))}})}),this.registerEvent(this.app.workspace.on("active-leaf-change",()=>{let n=this.app.workspace.getActiveViewOfType(p.MarkdownView);if(n){let l=this.app.workspace.getActiveFile(),i=this.app.metadataCache.getFileCache(l).headings;globalThis.headingdata=i,s(n)}})),this.registerEvent(this.app.metadataCache.on("changed",()=>{var l;let n=this.app.workspace.getActiveViewOfType(p.MarkdownView);if(n){let i=n.file,o=this.app.metadataCache.getFileCache(i).headings,a=o==null?void 0:o.map(c=>c.level+c.heading+c.position.start.line),d=(l=globalThis.headingdata)==null?void 0:l.map(c=>c.level+c.heading+c.position.start.line);if(JSON.stringify(d)==JSON.stringify(a))return;globalThis.headingdata=o,s(n)}}));let r=n=>{t(n)},s=n=>(0,p.debounce)(r(n),300,!0);u.addEventListener("scroll",H,!0),this.addSettingTab(new O(this.app,this)),t(this.app.workspace.getActiveViewOfType(p.MarkdownView)),(0,p.requireApiVersion)("0.15.0")&&this.app.workspace.on("window-open",n=>{n.doc.addEventListener("scroll",H,!0)}),app.workspace.layoutReady&&app.workspace.trigger("parse-style-settings")})}onunload(){(0,p.requireApiVersion)("0.15.0")?u=activeWindow.document:u=window.document,u.removeEventListener("scroll",H,!0),k()}loadSettings(){return b(this,null,function*(){this.settings=Object.assign({},V,yield this.loadData())})}saveSettings(){return b(this,null,function*(){yield this.saveData(this.settings)})}};
//# sourceMappingURL=data:application/json;base64,
